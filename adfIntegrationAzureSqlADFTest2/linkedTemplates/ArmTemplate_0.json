{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfIntegrationAzureSqlADFTest2"
		},
		"lsazureblobstorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'lsazureblobstorage'"
		},
		"lazurekv_desa_per_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().ParamUrlKeyVault}"
		},
		"lsrcDestination_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().ParamDataSourceCode"
		},
		"lsSqlServerDataBase_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "@linkedService().ParamDataSourceCode"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/callPipelineCopyCsvFromWebActivity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/0784505e-eb7a-4875-99ce-e87a55053531/resourceGroups/rg_wirbi_rfuster/providers/Microsoft.DataFactory/factories/adfIntegrationAzureSqlADFTest2/pipelines/pipcopycsvfile/createRun?api-version=2018-06-01",
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Finalizacion ejecucion pipeline",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Url Status Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('ExecutePipelineFinished'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Obtener estado de ejecucion pipeline",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@variables('VarUrlStatusRunIdPipeline')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								},
								{
									"name": "Set RunStatus Pipeline",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Obtener estado de ejecucion pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RunStatus",
										"value": {
											"value": "@string(activity('Obtener estado de ejecucion pipeline').output.status)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set pipeline finished",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set RunStatus Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExecutePipelineFinished",
										"value": {
											"value": "@if(equals(variables('RunStatus'), 'Queued'),'False',if(equals(variables('RunStatus'), 'InProgress'),'False',if(equals(variables('RunStatus'), 'Canceling'),'False','True')))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:10:00"
						}
					},
					{
						"name": "Set Url Status Pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlStatusRunIdPipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlStatusRunIdPipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@runidpipeline',string(activity('Ejecutar Pipeline').output.runId)),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ejecutar Pipeline",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Url Execute Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@variables('VarUrlExecutePipeline')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\",\"ParamCountryCode\":\"',pipeline().parameters.ParamCountryCode, '\",\"ParamdsrcIntegration\": \"', pipeline().parameters.ParamdsrcIntegration,'\",\"ParamSubscription\": \"',pipeline().parameters.ParamSubscription,'\",\"ParamResourceGroup\":\"', pipeline().parameters.ParamResourceGroup,'\",\"ParamInstanceNameADF\":\"', pipeline().parameters.ParamInstanceNameADF,'\",\"ParamUrlExecutePipeline\":\"',pipeline().parameters.ParamUrlExecutePipeline, '\",\"ParamUrlStatusRunIdPipeline\": \"', pipeline().parameters.ParamUrlStatusRunIdPipeline, '\"}')\n",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set Url Execute Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlExecutePipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlExecutePipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@pipelinename',pipeline().parameters.ParamPipelineNameADF),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamSubscription": {
						"type": "string"
					},
					"ParamResourceGroup": {
						"type": "string"
					},
					"ParamInstanceNameADF": {
						"type": "string"
					},
					"ParamPipelineNameADF": {
						"type": "string"
					},
					"ParamUrlExecutePipeline": {
						"type": "string"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string"
					},
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamExecuteLoadId": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"variables": {
					"RunId": {
						"type": "String",
						"defaultValue": "0"
					},
					"ExecutePipelineFinished": {
						"type": "String",
						"defaultValue": "false"
					},
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline12')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/998fac29-2308-4c82-85bb-aef2aa738815/resourceGroups/rgTriggerPipelineADFfromAzureSql/providers/Microsoft.DataFactory/factories/adfIntegrationAzureSqlADFTest/pipelines/pipeline1_copy1/createRun?api-version=2018-06-01",
							"body": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\"}')",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "PROCESO_ODS12"
					},
					"ParamExecuteLoadId": {
						"type": "string",
						"defaultValue": "234"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline14')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@range(0,length(pipeline().parameters.keys))",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "build each key value pair",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "temp",
										"value": {
											"value": "@string(union(json(variables('req')),json(concat('{\"',pipeline().parameters.keys[item()],'\":\"',pipeline().parameters.values[item()],'\"}'))))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "assign final outcome",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "build each key value pair",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "req",
										"value": {
											"value": "@variables('temp')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "valor",
							"value": {
								"value": "@json(variables('req')).key1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ejem",
							"value": {
								"value": "@string(length(pipeline().parameters.keys))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"keys": {
						"type": "array",
						"defaultValue": [
							"Key1",
							"Key2",
							"Key3"
						]
					},
					"values": {
						"type": "array",
						"defaultValue": [
							"value1",
							"value2",
							"value3"
						]
					}
				},
				"variables": {
					"req": {
						"type": "String",
						"defaultValue": "{}"
					},
					"temp": {
						"type": "String"
					},
					"valor": {
						"type": "String"
					},
					"ejem": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/998fac29-2308-4c82-85bb-aef2aa738815/resourceGroups/rgTriggerPipelineADFfromAzureSql/providers/Microsoft.DataFactory/factories/adfIntegrationAzureSqlADFTest/pipelines/pipeline1_copy1/createRun?api-version=2018-06-01",
							"body": {
								"ID_VALOR": "5",
								"VALOR_VALOR": "Rony3"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Obtener valor RunId Pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunId",
							"value": {
								"value": "@string(activity('Ejecutar Pipeline').output.runId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set VarUrlStatusRunIdPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlStatusRunIdPipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlStatusRunIdPipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@runidpipeline',string(activity('Ejecutar Pipeline').output.runId)),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ejecutar Pipeline",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set VarUrlExecutePipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@variables('VarUrlExecutePipeline')",
								"type": "Expression"
							},
							"body": {},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set VarUrlExecutePipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlExecutePipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlExecutePipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@pipelinename',pipeline().parameters.ParamPipelineNameADF),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamSubscription": {
						"type": "string",
						"defaultValue": "998fac29-2308-4c82-85bb-aef2aa738815"
					},
					"ParamResourceGroup": {
						"type": "string",
						"defaultValue": "rgTriggerPipelineADFfromAzureSql"
					},
					"ParamInstanceNameADF": {
						"type": "string",
						"defaultValue": "adfIntegrationAzureSqlADFTest"
					},
					"ParamPipelineNameADF": {
						"type": "string",
						"defaultValue": "pipcopycsvfile"
					},
					"ParamUrlExecutePipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelines/@pipelinename/createRun?api-version=2018-06-01"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelineruns/@runidpipeline?api-version=2018-06-01"
					}
				},
				"variables": {
					"RunId": {
						"type": "String",
						"defaultValue": "0"
					},
					"ExecutePipelineFinished": {
						"type": "String",
						"defaultValue": "false"
					},
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://management.azure.com/subscriptions/998fac29-2308-4c82-85bb-aef2aa738815/resourceGroups/rgTriggerPipelineADFfromAzureSql/providers/Microsoft.DataFactory/factories/adfIntegrationAzureSqlADFTest/pipelineruns/6defcc2f-4248-4512-9f7d-de5497163124?api-version=2018-06-01",
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Web1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunStatus",
							"value": {
								"value": "@string(activity('Web1').output.status)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": {
								"value": "@pipeline().parameters.param1",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var2",
							"value": {
								"value": "@{pipeline().parameters.ParamExecuteLoadCode} + @{pipeline().parameters.ParamEnvironment}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param1": {
						"type": "string",
						"defaultValue": "@pipeline().globalParameters.CountryCodeADF"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "UAT_PER"
					},
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ProcesarODS"
					}
				},
				"variables": {
					"var1": {
						"type": "String"
					},
					"var2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lazurekv_desa_per')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamUrlKeyVault": {
						"type": "string",
						"defaultValue": "https://kvdesaper3.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('lazurekv_desa_per_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsazureblobstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('lsazureblobstorage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoad_copy4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Finalizacion ejecucion pipeline",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Url Status Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('ExecutePipelineFinished'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Obtener estado de ejecucion pipeline",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@variables('VarUrlStatusRunIdPipeline')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								},
								{
									"name": "Set RunStatus Pipeline",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Obtener estado de ejecucion pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RunStatus",
										"value": {
											"value": "@string(activity('Obtener estado de ejecucion pipeline').output.status)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set pipeline finished",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set RunStatus Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExecutePipelineFinished",
										"value": {
											"value": "@if(equals(variables('RunStatus'), 'Queued'),'False',if(equals(variables('RunStatus'), 'InProgress'),'False',if(equals(variables('RunStatus'), 'Canceling'),'False','True')))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:10:00"
						}
					},
					{
						"name": "Set Url Status Pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlStatusRunIdPipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlStatusRunIdPipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@runidpipeline',string(activity('Ejecutar Pipeline').output.runId)),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ejecutar Pipeline",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Url Execute Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@variables('VarUrlExecutePipeline')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\",\"ParamCountryCode\":\"',pipeline().parameters.ParamCountryCode, '\",\"ParamdsrcIntegration\": \"', pipeline().parameters.ParamdsrcIntegration,'\",\"ParamSubscription\": \"',pipeline().parameters.ParamSubscription,'\",\"ParamResourceGroup\":\"', pipeline().parameters.ParamResourceGroup,'\",\"ParamInstanceNameADF\":\"', pipeline().parameters.ParamInstanceNameADF,'\",\"ParamUrlExecutePipeline\":\"',pipeline().parameters.ParamUrlExecutePipeline, '\",\"ParamUrlStatusRunIdPipeline\": \"', pipeline().parameters.ParamUrlStatusRunIdPipeline, '\"}')\n",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set Url Execute Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlExecutePipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlExecutePipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@pipelinename',pipeline().parameters.ParamPipelineNameADF),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamSubscription": {
						"type": "string",
						"defaultValue": "0784505e-eb7a-4875-99ce-e87a55053531"
					},
					"ParamResourceGroup": {
						"type": "string",
						"defaultValue": "rg_wirbi_rfuster"
					},
					"ParamInstanceNameADF": {
						"type": "string",
						"defaultValue": "adfIntegrationAzureSqlADFTest2"
					},
					"ParamPipelineNameADF": {
						"type": "string",
						"defaultValue": "pipADF_ADM_EjecutarQuerysSQL"
					},
					"ParamUrlExecutePipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelines/@pipelinename/createRun?api-version=2018-06-01"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelineruns/@runidpipeline?api-version=2018-06-01"
					},
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ODS_CopiaLocal_Temporary_Core_PeriodWeekly"
					},
					"ParamExecuteLoadId": {
						"type": "string",
						"defaultValue": "20148"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					},
					"ParamCountryCode": {
						"type": "string",
						"defaultValue": "PE"
					},
					"ParamdsrcIntegration": {
						"type": "string",
						"defaultValue": "desaperreportesgenerales"
					}
				},
				"variables": {
					"RunId": {
						"type": "String",
						"defaultValue": "0"
					},
					"ExecutePipelineFinished": {
						"type": "String",
						"defaultValue": "false"
					},
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoad_copy5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Finalizacion ejecucion pipeline",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Url Status Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('ExecutePipelineFinished'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Obtener estado de ejecucion pipeline",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@variables('VarUrlStatusRunIdPipeline')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								},
								{
									"name": "Set RunStatus Pipeline",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Obtener estado de ejecucion pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RunStatus",
										"value": {
											"value": "@string(activity('Obtener estado de ejecucion pipeline').output.status)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set pipeline finished",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set RunStatus Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExecutePipelineFinished",
										"value": {
											"value": "@if(equals(variables('RunStatus'), 'Queued'),'False',if(equals(variables('RunStatus'), 'InProgress'),'False',if(equals(variables('RunStatus'), 'Canceling'),'False','True')))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:10:00"
						}
					},
					{
						"name": "Set Url Status Pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlStatusRunIdPipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlStatusRunIdPipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@runidpipeline',string(activity('Ejecutar Pipeline').output.runId)),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ejecutar Pipeline",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Url Execute Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@variables('VarUrlExecutePipeline')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\",\"ParamCountryCode\":\"',pipeline().parameters.ParamCountryCode, '\",\"ParamdsrcIntegration\": \"', pipeline().parameters.ParamdsrcIntegration,'\",\"ParamSubscription\": \"',pipeline().parameters.ParamSubscription,'\",\"ParamResourceGroup\":\"', pipeline().parameters.ParamResourceGroup,'\",\"ParamInstanceNameADF\":\"', pipeline().parameters.ParamInstanceNameADF,'\",\"ParamUrlExecutePipeline\":\"',pipeline().parameters.ParamUrlExecutePipeline, '\",\"ParamUrlStatusRunIdPipeline\": \"', pipeline().parameters.ParamUrlStatusRunIdPipeline, '\"}')\n",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set Url Execute Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlExecutePipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlExecutePipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@pipelinename',pipeline().parameters.ParamPipelineNameADF),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamSubscription": {
						"type": "string",
						"defaultValue": "0784505e-eb7a-4875-99ce-e87a55053531"
					},
					"ParamResourceGroup": {
						"type": "string",
						"defaultValue": "rg_wirbi_rfuster"
					},
					"ParamInstanceNameADF": {
						"type": "string",
						"defaultValue": "adfIntegrationAzureSqlADFTest2"
					},
					"ParamPipelineNameADF": {
						"type": "string",
						"defaultValue": "pipADF_CopyData_SqlServer_To_AzureSql_SP_TB"
					},
					"ParamUrlExecutePipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelines/@pipelinename/createRun?api-version=2018-06-01"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string",
						"defaultValue": "https://management.azure.com/subscriptions/@subscriptionId/resourceGroups/@resourceGroup/providers/Microsoft.DataFactory/factories/@adfName/pipelineruns/@runidpipeline?api-version=2018-06-01"
					},
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ODS_Copia_Temporary_Core_PeriodWeekly"
					},
					"ParamExecuteLoadId": {
						"type": "string",
						"defaultValue": "20147"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					},
					"ParamCountryCode": {
						"type": "string",
						"defaultValue": "PE"
					},
					"ParamdsrcIntegration": {
						"type": "string",
						"defaultValue": "desaperreportesgenerales"
					}
				},
				"variables": {
					"RunId": {
						"type": "String",
						"defaultValue": "0"
					},
					"ExecutePipelineFinished": {
						"type": "String",
						"defaultValue": "false"
					},
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoad_V1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set RunId pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "RunId",
							"value": {
								"value": "@string(activity('Ejecutar Pipeline').output.runId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Finalizacion ejecucion pipeline",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set RunId pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set Url Status Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('ExecutePipelineFinished'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Obtener estado de ejecucion pipeline",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "GET",
										"headers": {},
										"url": {
											"value": "@variables('VarUrlStatusRunIdPipeline')",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com"
										}
									}
								},
								{
									"name": "Set RunStatus Pipeline",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Obtener estado de ejecucion pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "RunStatus",
										"value": {
											"value": "@string(activity('Obtener estado de ejecucion pipeline').output.status)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set pipeline finished",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set RunStatus Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ExecutePipelineFinished",
										"value": {
											"value": "@if(equals(variables('RunStatus'), 'Queued'),'False',if(equals(variables('RunStatus'), 'InProgress'),'False',if(equals(variables('RunStatus'), 'Canceling'),'False','True')))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait1",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Set pipeline finished",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": {
											"value": "@if(equals(variables('ExecutePipelineFinished'), 'True'),1,1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.00:10:00"
						}
					},
					{
						"name": "Set Url Status Pipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Ejecutar Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlStatusRunIdPipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlStatusRunIdPipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@runidpipeline',string(activity('Ejecutar Pipeline').output.runId)),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Ejecutar Pipeline",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Url Execute Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": {
								"value": "@variables('VarUrlExecutePipeline')",
								"type": "Expression"
							},
							"body": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\",\"ParamCountryCode\":\"',pipeline().parameters.ParamCountryCode, '\",\"ParamdsrcIntegration\": \"', pipeline().parameters.ParamdsrcIntegration,'\",\"ParamSubscription\": \"',pipeline().parameters.ParamSubscription,'\",\"ParamResourceGroup\":\"', pipeline().parameters.ParamResourceGroup,'\",\"ParamInstanceNameADF\":\"', pipeline().parameters.ParamInstanceNameADF,'\",\"ParamUrlExecutePipeline\":\"',pipeline().parameters.ParamUrlExecutePipeline, '\",\"ParamUrlStatusRunIdPipeline\": \"', pipeline().parameters.ParamUrlStatusRunIdPipeline, '\"}')\n",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.azure.com"
							}
						}
					},
					{
						"name": "Set Url Execute Pipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "VarUrlExecutePipeline",
							"value": {
								"value": "@replace(replace(replace(replace(pipeline().parameters.ParamUrlExecutePipeline, '@subscriptionId', pipeline().parameters.ParamSubscription), '@resourceGroup', pipeline().parameters.ParamResourceGroup),'@pipelinename',pipeline().parameters.ParamPipelineNameADF),'@adfName',pipeline().parameters.ParamInstanceNameADF)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamSubscription": {
						"type": "string"
					},
					"ParamResourceGroup": {
						"type": "string"
					},
					"ParamInstanceNameADF": {
						"type": "string"
					},
					"ParamPipelineNameADF": {
						"type": "string"
					},
					"ParamUrlExecutePipeline": {
						"type": "string"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string"
					},
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamExecuteLoadId": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"variables": {
					"RunId": {
						"type": "String",
						"defaultValue": "0"
					},
					"ExecutePipelineFinished": {
						"type": "String",
						"defaultValue": "false"
					},
					"RunStatus": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilesAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsazureblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "source"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsazureblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilesDestinationAzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsazureblobstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "destination"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsazureblobstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsrcDestination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "desaperreportesgenerales"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lazurekv_desa_per",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamUrlKeyVault": "https://kvdesaper3.vault.azure.net/"
							}
						},
						"secretName": {
							"value": "[parameters('lsrcDestination_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lazurekv_desa_per')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lsSqlServerDataBase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ParamDataSourceCode": {
						"type": "string",
						"defaultValue": "desaperyanbalreportsods"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "lazurekv_desa_per",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamUrlKeyVault": "https://kvdesaper3.vault.azure.net/"
							}
						},
						"secretName": {
							"value": "[parameters('lsSqlServerDataBase_properties_typeProperties_connectionString_secretName')]",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lazurekv_desa_per')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_EjecutarQuerysSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Query SQL",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Generar lista parametros",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@json(variables('varListParameters')).dsrcDestination",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@json(variables('varListParameters')).ExecuteQuery",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Start Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package Start Process','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('Start Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "End Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute Query SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package End Proces','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('End Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					},
					{
						"name": "GET Step configuration",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Start Process - Save Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [AdminPackage].[ExecuteLoadConfigurationStepADF] @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Generar lista parametros",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET Step configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET Step configuration').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "get parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varParameter",
										"value": {
											"value": "@string(union(json(variables('varListParameters')),json(concat('{\"',item().Parameter,'\":\"',item().ParameterValue,'\"}'))))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add parameter to json parameters",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "get parameter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varListParameters",
										"value": {
											"value": "@variables('varParameter')",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamExecuteLoadId": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					},
					"ParamSubscription": {
						"type": "string"
					},
					"ParamResourceGroup": {
						"type": "string"
					},
					"ParamInstanceNameADF": {
						"type": "string"
					},
					"ParamUrlExecutePipeline": {
						"type": "string"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string"
					}
				},
				"variables": {
					"varListParameters": {
						"type": "String",
						"defaultValue": "{}"
					},
					"varParameter": {
						"type": "String"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsrcDestination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoadSecuence')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load ExecuteLoadSequence",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Start Process - Save Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC AdminPackage.ExecuteLoadSequenceADF @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Childs Pipelines",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load ExecuteLoadSequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Load ExecuteLoadSequence').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Child Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipADF_ADM_ExecuteLoad",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParamSubscription": {
												"value": "@pipeline().parameters.ParamSubscription",
												"type": "Expression"
											},
											"ParamResourceGroup": {
												"value": "@pipeline().parameters.ParamResourceGroup",
												"type": "Expression"
											},
											"ParamInstanceNameADF": {
												"value": "@pipeline().parameters.ParamInstanceNameADF",
												"type": "Expression"
											},
											"ParamPipelineNameADF": {
												"value": "@item().SequencePipelineName",
												"type": "Expression"
											},
											"ParamUrlExecutePipeline": {
												"value": "@pipeline().parameters.ParamUrlExecutePipeline",
												"type": "Expression"
											},
											"ParamUrlStatusRunIdPipeline": {
												"value": "@pipeline().parameters.ParamUrlStatusRunIdPipeline",
												"type": "Expression"
											},
											"ParamExecuteLoadCode": {
												"value": "@item().SequenceExecuteLoadCode",
												"type": "Expression"
											},
											"ParamExecuteLoadId": {
												"value": "@item().SequenceExecuteLoadId",
												"type": "Expression"
											},
											"ParamEnvironment": {
												"value": "@pipeline().parameters.ParamEnvironment",
												"type": "Expression"
											},
											"ParamCountryCode": {
												"value": "@pipeline().parameters.ParamCountryCode",
												"type": "Expression"
											},
											"ParamdsrcIntegration": {
												"value": "@item().dsrcIntegration",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Start Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package Start Process','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('Start Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "End Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Childs Pipelines",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package End Proces','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('End Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamSubscription": {
						"type": "string"
					},
					"ParamResourceGroup": {
						"type": "string"
					},
					"ParamInstanceNameADF": {
						"type": "string"
					},
					"ParamUrlExecutePipeline": {
						"type": "string"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string"
					},
					"ParamExecuteLoadId": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					}
				},
				"variables": {
					"varSubscription": {
						"type": "String",
						"defaultValue": "0"
					},
					"varResourceGroup": {
						"type": "String",
						"defaultValue": "0"
					},
					"varInstanceNameADF": {
						"type": "String",
						"defaultValue": "0"
					},
					"varUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"varUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsrcDestination')]",
				"[concat(variables('factoryId'), '/pipelines/pipADF_ADM_ExecuteLoad')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoadParent_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load ExecuteLoadSequence",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC AdminPackage.ExecuteLoadSequenceADF @{pipeline().parameters.ExecuteLoadCode} , @{pipeline().parameters.Environment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load ExecuteLoadSequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Load ExecuteLoadSequence').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "USP_INSERT_tmpselect2",
										"storedProcedureParameters": {
											"SequenceExecuteLoadCode": {
												"value": {
													"value": "@item().SequenceExecuteLoadCode",
													"type": "Expression"
												},
												"type": "String"
											},
											"SequenceExecution": {
												"value": {
													"value": "@item().SequenceExecution",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"SequencePipelineName": {
												"value": {
													"value": "@item().SequencePipelineName",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lsrcDestination",
										"type": "LinkedServiceReference",
										"parameters": {
											"ParamDataSourceCode": "desaperreportesgenerales"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ODS_BusinessApp"
					},
					"Environment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/lsrcDestination')]"
			]
		}
	]
}