{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfIntegrationAzureSqlADFTest2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_CopyData_SqlServer_To_AzureSql_SP_TB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Generar lista parametros",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": {
									"value": "@json(variables('varListParameters')).storedNameSource",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@json(variables('varListParameters')).precopyScript",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {
									"ParamDataSourceCode": {
										"value": "@json(variables('varListParameters')).dsrcSource",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"schematablename": {
										"value": "@json(variables('varListParameters')).schemaTableDestination",
										"type": "Expression"
									},
									"tablename": {
										"value": "@json(variables('varListParameters')).tableNameDestination",
										"type": "Expression"
									},
									"ParamDataSourceCode": {
										"value": "@json(variables('varListParameters')).dsrcDestination",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Start Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package Start Process','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('Start Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "GET Step configuration",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Start Process - Save Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@pipeline().parameters.ParamdsrcIntegration",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [AdminPackage].[ExecuteLoadConfigurationStepADF] @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Generar lista parametros",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GET Step configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GET Step configuration').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "get parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varParameter",
										"value": {
											"value": "@string(union(json(variables('varListParameters')),json(concat('{\"',item().Parameter,'\":\"',item().ParameterValue,'\"}'))))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Add parameter to json parameters",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "get parameter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "varListParameters",
										"value": {
											"value": "@variables('varParameter')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "End Process - Save Log",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[AdminPackage].[CaptureLogPackage]",
							"storedProcedureParameters": {
								"Comments": {
									"value": {
										"value": "@concat('Package End Proces','')",
										"type": "Expression"
									},
									"type": "String"
								},
								"CountryCode": {
									"value": {
										"value": "@pipeline().parameters.ParamCountryCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"Enviroment": {
									"value": {
										"value": "@pipeline().parameters.ParamEnvironment",
										"type": "Expression"
									},
									"type": "String"
								},
								"ExecuteLoadConfiguration": {
									"value": {
										"value": "@pipeline().parameters.ParamExecuteLoadId",
										"type": "Expression"
									},
									"type": "Int16"
								},
								"LoadDateSSIS": {
									"value": {
										"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogEventType": {
									"value": "1",
									"type": "Int16"
								},
								"PackageName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"TaskName": {
									"value": {
										"value": "@concat('End Process - Save Log')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string"
					},
					"ParamExecuteLoadId": {
						"type": "string"
					},
					"ParamEnvironment": {
						"type": "string"
					},
					"ParamCountryCode": {
						"type": "string"
					},
					"ParamdsrcIntegration": {
						"type": "string"
					},
					"ParamSubscription": {
						"type": "string"
					},
					"ParamResourceGroup": {
						"type": "string"
					},
					"ParamInstanceNameADF": {
						"type": "string"
					},
					"ParamUrlExecutePipeline": {
						"type": "string"
					},
					"ParamUrlStatusRunIdPipeline": {
						"type": "string"
					}
				},
				"variables": {
					"varListParameters": {
						"type": "String",
						"defaultValue": "{}"
					},
					"varParameter": {
						"type": "String"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline15')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "USP_LEER_tmpLista",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"schematablename": {
										"value": "@pipeline().parameters.schematablenamesource",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablenamesource",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schematablenamesource": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tablenamesource": {
						"type": "string",
						"defaultValue": "tmpLista"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline15_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "USP_LEER_tmpLista2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"schematablename": {
										"value": "@pipeline().parameters.schematablenamesource",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablenamesource",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schematablenamesource": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"tablenamesource": {
						"type": "string",
						"defaultValue": "tmpLista"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_paralelo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "USP_LEER_tmpLista2",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {
									"schematablename": "0",
									"tablename": "0",
									"ParamDataSourceCode": "desaperreportesgenerales"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"batchCount": 2,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "USP_INS_tmpLista2",
										"storedProcedureParameters": {
											"clave": {
												"value": {
													"value": "@item().Id",
													"type": "Expression"
												},
												"type": "String"
											},
											"Id": {
												"value": {
													"value": "@item().clave",
													"type": "Expression"
												},
												"type": "String"
											},
											"orden": {
												"value": {
													"value": "@item().orden",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lsrcDestination",
										"type": "LinkedServiceReference",
										"parameters": {
											"ParamDataSourceCode": "desaperreportesgenerales"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var1": {
						"type": "String",
						"defaultValue": "0"
					},
					"var2": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}