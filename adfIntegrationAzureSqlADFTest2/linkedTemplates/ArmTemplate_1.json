{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adfIntegrationAzureSqlADFTest2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_INSERT_tmpselect3]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@pipeline().parameters.ID_VALOR",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"VALOR": {
									"value": {
										"value": "@pipeline().parameters.VALOR_VALOR",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ID_VALOR": {
						"type": "string",
						"defaultValue": "0"
					},
					"VALOR_VALOR": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_copy3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_INSERT_tmpselect]",
							"storedProcedureParameters": {
								"ID": {
									"value": {
										"value": "@pipeline().parameters.ID_VALOR",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"VALOR": {
									"value": {
										"value": "@pipeline().parameters.VALOR_VALOR",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": {
								"value": "@pipeline().parameters.ID_VALOR",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ID_VALOR": {
						"type": "string",
						"defaultValue": "1"
					},
					"VALOR_VALOR": {
						"type": "string",
						"defaultValue": "A"
					}
				},
				"variables": {
					"var1": {
						"type": "String",
						"defaultValue": "ddddd"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1_copy4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[USP_INSERT_tmpselect13]",
							"storedProcedureParameters": {
								"FECHA": {
									"value": {
										"value": "@variables('Fecha')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ID": {
									"value": {
										"value": "@pipeline().parameters.ID_VALOR",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"VALOR": {
									"value": {
										"value": "@pipeline().parameters.VALOR_VALOR",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Fecha",
							"value": {
								"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ID_VALOR": {
						"type": "string",
						"defaultValue": "0"
					},
					"VALOR_VALOR": {
						"type": "string",
						"defaultValue": "0"
					}
				},
				"variables": {
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Script1",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "EXEC USP_SELECT_tmpselect"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Script1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Script1').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "USP_INSERT_tmpselect2",
										"storedProcedureParameters": {
											"ID": {
												"value": {
													"value": "@item().ID",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"VALOR": {
												"value": {
													"value": "@item().VALOR",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "lsrcDestination",
										"type": "LinkedServiceReference",
										"parameters": {
											"ParamDataSourceCode": "desaperreportesgenerales"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var2",
							"value": {
								"value": "@concat('{  \"ParamExecuteLoadCode\": \"',pipeline().parameters.ParamExecuteLoadCode,'\",\"ParamExecuteLoadId\":\"', pipeline().parameters.ParamExecuteLoadId,'\",\"ParamEnvironment\":\"', pipeline().parameters.ParamEnvironment,'\"}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": {
								"value": "@formatDateTime(utcnow(), 'dd-MMM-yyyy hh:mm:ss tt')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET Step configuration",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@variables('vardsrcDestination')",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [AdminPackage].[ExecuteLoadConfigurationStepADF] @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param1": {
						"type": "string",
						"defaultValue": "@pipeline().globalParameters.CountryCodeADF"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "UAT_PER"
					},
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ProcesarODS"
					},
					"ParamExecuteLoadId": {
						"type": "string",
						"defaultValue": "1234"
					}
				},
				"variables": {
					"var1": {
						"type": "String"
					},
					"var2": {
						"type": "String"
					},
					"var3": {
						"type": "String"
					},
					"vardsrcDestination": {
						"type": "String",
						"defaultValue": "desaperyanbalreportsods"
					},
					"ParamEnvironment": {
						"type": "String",
						"defaultValue": "DESA_PER"
					},
					"ParamExecuteLoadCode": {
						"type": "String",
						"defaultValue": "ODS_ProcesamientoDim_Sales_SalesParametersByTitle"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GET Step configuration",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": {
									"value": "@variables('vardsrcDestination')",
									"type": "Expression"
								}
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC [AdminPackage].[ExecuteLoadConfigurationStepADF] @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET Step configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var1",
							"value": {
								"value": "@activity('GET Step configuration').output.resultSets[0]['rows'][0].Parameter",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param1": {
						"type": "string",
						"defaultValue": "@pipeline().globalParameters.CountryCodeADF"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					},
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ODS_ProcesamientoDim_Sales_SalesParametersByTitle"
					},
					"ParamExecuteLoadId": {
						"type": "string",
						"defaultValue": "1234"
					}
				},
				"variables": {
					"var1": {
						"type": "String"
					},
					"var2": {
						"type": "String"
					},
					"var3": {
						"type": "String"
					},
					"vardsrcDestination": {
						"type": "String",
						"defaultValue": "desaperyanbalreportsods"
					},
					"ParamEnvironment": {
						"type": "String",
						"defaultValue": "DESA_PER"
					},
					"ParamExecuteLoadCode": {
						"type": "String",
						"defaultValue": "ODS_ProcesamientoDim_Sales_SalesParametersByTitle"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "lsrcDestination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/execute_pipeline1_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline1_copy1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ID_VALOR": "2",
								"VALOR_VALOR": "B"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ID_VALOR": {
						"type": "string",
						"defaultValue": "1"
					},
					"VALOR_VALOR": {
						"type": "string",
						"defaultValue": "A"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipADF_ADM_ExecuteLoadParent')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load ExecuteLoadSequence",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Set varSubscription",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set varResourceGroup",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set varUrlExecutePipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set varInstanceNameADF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set varUrlStatusRunIdPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "lsrcDestination",
							"type": "LinkedServiceReference",
							"parameters": {
								"ParamDataSourceCode": "desaperreportesgenerales"
							}
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "EXEC AdminPackage.ExecuteLoadSequenceADF @{pipeline().parameters.ParamExecuteLoadCode} , @{pipeline().parameters.ParamEnvironment}",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Childs Pipelines",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Load ExecuteLoadSequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Load ExecuteLoadSequence').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Child Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipADF_ADM_ExecuteLoad",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ParamSubscription": {
												"value": "@variables('varSubscription')",
												"type": "Expression"
											},
											"ParamResourceGroup": {
												"value": "@variables('varResourceGroup')",
												"type": "Expression"
											},
											"ParamInstanceNameADF": {
												"value": "@variables('varInstanceNameADF')",
												"type": "Expression"
											},
											"ParamPipelineNameADF": {
												"value": "@item().SequencePipelineName",
												"type": "Expression"
											},
											"ParamUrlExecutePipeline": {
												"value": "@variables('varUrlExecutePipeline')",
												"type": "Expression"
											},
											"ParamUrlStatusRunIdPipeline": {
												"value": "@variables('varUrlStatusRunIdPipeline')",
												"type": "Expression"
											},
											"ParamExecuteLoadCode": {
												"value": "@item().SequenceExecuteLoadCode",
												"type": "Expression"
											},
											"ParamExecuteLoadId": {
												"value": "@item().SequenceExecuteLoadId",
												"type": "Expression"
											},
											"ParamEnvironment": {
												"value": "@pipeline().parameters.ParamEnvironment",
												"type": "Expression"
											},
											"ParamCountryCode": {
												"value": "@pipeline().parameters.ParamCountryCode",
												"type": "Expression"
											},
											"ParamdsrcIntegration": {
												"value": "@item().dsrcIntegration",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Set varSubscription",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET ADF configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varSubscription",
							"value": {
								"value": "@string(activity('GET ADF configuration').output.firstRow.SubscriptionId)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set varResourceGroup",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET ADF configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varResourceGroup",
							"value": {
								"value": "@string(activity('GET ADF configuration').output.firstRow.ResourceGroup)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set varUrlExecutePipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET ADF configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUrlExecutePipeline",
							"value": {
								"value": "@string(activity('GET ADF configuration').output.firstRow.UrlExecutePipeline)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set varInstanceNameADF",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET ADF configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varInstanceNameADF",
							"value": {
								"value": "@string(activity('GET ADF configuration').output.firstRow.ADFInstanceName)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set varUrlStatusRunIdPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "GET ADF configuration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "varUrlStatusRunIdPipeline",
							"value": {
								"value": "@string(activity('GET ADF configuration').output.firstRow.UrlStatusRunIdPipeline)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "GET ADF configuration",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[AdminPackage].[GetConfigurationADFInstance]",
								"storedProcedureParameters": {
									"CountryCode": {
										"type": "String",
										"value": {
											"value": "@pipeline().globalParameters.CountryCodeADF",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ParamExecuteLoadCode": {
						"type": "string",
						"defaultValue": "ODS_BusinessApp"
					},
					"ParamEnvironment": {
						"type": "string",
						"defaultValue": "DESA_PER"
					},
					"ParamCountryCode": {
						"type": "string",
						"defaultValue": "PE"
					}
				},
				"variables": {
					"varSubscription": {
						"type": "String",
						"defaultValue": "0"
					},
					"varResourceGroup": {
						"type": "String",
						"defaultValue": "0"
					},
					"varInstanceNameADF": {
						"type": "String",
						"defaultValue": "0"
					},
					"varUrlExecutePipeline": {
						"type": "String",
						"defaultValue": "0"
					},
					"varUrlStatusRunIdPipeline": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "YanbalPipelines/YanbalODS_BusinessApp"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		}
	]
}